#!/usr/bin/perl

use lib '../../modules';
use UNIVERSAL 'isa';
use PPI ();
use PPI::Token ();

my $filename = (defined $ARGV[0] and -r $ARGV[0]) ? shift @ARGV : $INC{'PPI/Token/Classes.pm'};

# Load the test source
my $source;
{
	$/ = undef;
	open( FILE, $filename ) or die "open: $!";
	$source = <FILE>;
	close FILE;
}

# Create the tokenizer
my $Tokenizer = new PPI::Tokenizer( source => $source ) or die "Failed to create Tokenizer";
my $tokens = $Tokenizer->all_tokens or die( "Error getting tokens at line $Tokenizer->{line_count} ('$Tokenizer->{line_buffer}'): "
	. $Tokenizer->errstr  );
print "Found " . scalar(@$tokens) . " tokens\n";

# Create a merged pod document
#my $Pod = PPI::Token::Pod->merge( grep { isa( $_, 'PPI::Token::Pod' ) } @$tokens );
#if ( $Pod ) {
	#print $Pod->content;
#} else {
#	print "Did not find any pod in the file\n";
#}

1;

