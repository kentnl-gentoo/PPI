#fOrTyTwO
$hz=100;
$XS_VERSION='DProf 20000000.00_01';
# All values are given in HZ
$over_utime=0; $over_stime=1; $over_rtime=1;
$over_tests=10000;
$rrun_utime=10; $rrun_stime=0; $rrun_rtime=10;
$total_marks=1849                                                                                                                                                                                

PART2
@ 1 0 1
& 2 main BEGIN
+ 2
& 3 strict import
+ 3
& 4 strict bits
+ 4
- 4
- 3
- 2
+ 2
& 5 lib BEGIN
+ 5
& 6 Config BEGIN
+ 6
- 6
@ 1 0 1
& 7 Config TIEHASH
+ 7
- 7
& 8 Config import
+ 8
- 8
- 5
+ 5
+ 3
+ 4
- 4
- 3
- 5
& 9 Config FETCH
+ 9
- 9
+ 9
- 9
+ 9
- 9
& a lib import
+ a
& b lib _nativize
+ b
- b
& c lib _get_dirs
+ c
- c
- a
- 2
+ 2
+ a
+ b
- b
+ c
- c
- a
- 2
+ 2
& d Exporter import
+ d
- d
- 2
+ 2
& e Test::More BEGIN
+ e
- e
+ e
+ 3
+ 4
- 4
- 3
- e
+ e
& f Test::Builder BEGIN
+ f
- f
& 10 Test::Builder BEGIN
+ 10
+ 3
+ 4
- 4
- 3
- 10
+ 10
& 11 vars BEGIN
+ 11
- 11
& 12 vars BEGIN
+ 12
& 13 warnings BEGIN
+ 13
+ d
- d
- 13
& 14 warnings::register import
+ 14
& 15 warnings::register mkMask
+ 15
- 15
+ 15
- 15
- 14
- 12
+ 12
+ 3
+ 4
- 4
- 3
- 12
+ 12
- 12
- 10
& 16 Test::Builder BEGIN
+ 16
+ 8
- 8
- 16
& 17 Test::Builder BEGIN
+ 17
+ 9
- 9
& 18 threads BEGIN
+ 18
- 18
+ 18
+ 3
+ 4
- 4
- 3
- 18
+ 18
& 19 warnings import
+ 19
- 19
- 18
+ 18
+ 8
- 8
- 18
+ 18
+ 9
- 9
- 18
+ 18
@ 1 0 1
& 1a overload BEGIN
+ 1a
+ 14
+ 15
- 15
+ 15
- 15
- 14
- 1a
& 1b overload import
+ 1b
& 1c overload OVERLOAD
+ 1c
- 1c
- 1b
- 18
& 1d threads BEGIN
+ 1d
- 1d
& 1e DynaLoader BEGIN
+ 1e
+ 12
- 12
- 1e
& 1f DynaLoader BEGIN
+ 1f
+ 8
- 8
- 1f
& 20 AutoLoader BEGIN
+ 20
- 20
& 21 AutoLoader BEGIN
+ 21
- 21
+ 9
- 9
+ 9
- 9
+ 9
- 9
+ 9
- 9
& 22 DynaLoader bootstrap
+ 22
& 23 DynaLoader dl_load_flags
+ 23
- 23
& 24 DynaLoader dl_load_file
+ 24
- 24
& 25 DynaLoader dl_undef_symbols
+ 25
- 25
& 26 DynaLoader dl_find_symbol
+ 26
- 26
& 27 DynaLoader dl_install_xsub
+ 27
- 27
& 28 threads bootstrap
+ 28
- 28
- 22
& 29 threads::shared BEGIN
+ 29
- 29
+ 29
+ 3
+ 4
- 4
- 3
- 29
+ 29
+ 19
- 19
- 29
& 2a XSLoader load
+ 2a
+ 24
- 24
+ 25
- 25
+ 26
- 26
+ 27
- 27
& 2b threads::shared bootstrap
+ 2b
- 2b
- 2a
+ d
- d
- 17
& 2c Test::Builder BEGIN
+ 2c
+ 12
- 12
- 2c
@ 1 0 1
& 2d Test::Builder BEGIN
+ 2d
& 2e strict unimport
+ 2e
+ 4
- 4
- 2e
- 2d
& 2f threads::shared share
+ 2f
- 2f
+ 2f
- 2f
+ 2f
- 2f
& 30 Test::Builder level
+ 30
- 30
& 31 Test::Builder _autoflush
+ 31
- 31
+ 31
- 31
+ 31
- 31
+ 31
- 31
& 32 Test::Builder output
+ 32
& 33 Test::Builder _new_fh
+ 33
& 34 UNIVERSAL isa
+ 34
- 34
- 33
- 32
& 35 Test::Builder failure_output
+ 35
+ 33
+ 34
- 34
- 33
- 35
& 36 Test::Builder todo_output
+ 36
+ 33
+ 34
- 34
- 33
- 36
+ d
- d
- e
& 37 Test::More BEGIN
+ 37
+ 12
- 12
- 37
& 38 Test::More BEGIN
+ 38
+ 12
- 12
- 38
@ 1 0 1
& 39 Test::Builder new
+ 39
- 39
& 3a Test::More import
+ 3a
& 3b Test::More plan
* 3b
& 3c Test::Builder exported_to
+ 3c
- 3c
& 3d Test::Builder plan
+ 3d
& 3e Test::Builder expected_tests
+ 3e
& 3f Test::Builder no_header
+ 3f
- 3f
& 40 Test::Builder _print
+ 40
+ 32
- 32
- 40
- 3e
- 3d
& 41 Test::More _export_to_level
+ 41
& 42 Exporter export
+ 42
& 43 Exporter as_heavy
+ 43
& 44 Exporter::Heavy BEGIN
+ 44
+ 3
+ 4
- 4
- 3
- 44
+ 44
+ 2e
+ 4
- 4
- 2e
- 44
- 43
& 45 Exporter::Heavy heavy_export
* 45
- 45
- 41
- 3b
- 2
& 46 main BEGIN
+ 46
& 47 PPI BEGIN
+ 47
- 47
+ 47
+ 3
+ 4
- 4
- 3
- 47
+ 47
+ d
- d
- 47
+ 47
& 48 Class::Autouse BEGIN
+ 48
+ 3
+ 4
- 4
- 3
- 48
+ 48
+ 2e
+ 4
- 4
- 2e
- 48
+ 48
- 48
+ 48
& 49 base BEGIN
+ 49
- 49
& 4a base import
+ 4a
+ 34
- 34
- 4a
- 48
+ 48
- 48
+ 48
& 4b File::Spec BEGIN
+ 4b
+ 3
+ 4
- 4
- 3
- 4b
+ 4b
+ 12
- 12
- 4b
& 4c File::Spec::Unix BEGIN
+ 4c
+ 3
+ 4
- 4
- 3
- 4c
+ 4c
+ 12
- 12
- 4c
& 4d File::Spec::Unix BEGIN
+ 4d
+ 2e
+ 4
- 4
- 2e
- 4d
- 48
+ 48
+ 22
+ 23
- 23
+ 24
- 24
+ 25
- 25
+ 26
- 26
+ 27
- 27
& 4e List::Util bootstrap
+ 4e
- 4e
- 22
- 48
+ 48
+ 12
- 12
- 48
+ 48
+ 12
- 12
- 48
+ 48
+ 12
- 12
- 48
@ 1 0 1
+ 48
- 48
+ 48
- 48
& 4f Class::Autouse BEGIN
+ 4f
& 50 warnings unimport
+ 50
- 50
- 4f
& 51 Class::Autouse BEGIN
+ 51
& 52 Class::Autouse class_exists
+ 52
& 53 Class::Autouse _namespace_occupied
+ 53
- 53
& 54 Class::Autouse _file_exists
+ 54
- 54
- 52
- 51
& 55 Class::Autouse autouse
+ 55
- 55
- 47
+ 47
+ 12
- 12
- 47
+ 47
- 47
+ 47
+ 4a
+ 34
- 34
& 56 PPI::Common BEGIN
+ 56
+ 3
+ 4
- 4
- 3
- 56
+ 56
+ 12
- 12
- 56
+ 56
- 56
- 4a
- 47
+ 47
& 57 PPI::Element BEGIN
+ 57
+ 3
+ 4
- 4
- 3
- 57
+ 57
+ 4a
+ 34
- 34
- 4a
- 57
+ 57
+ d
- d
- 57
+ 57
+ 12
- 12
- 57
+ 57
- 57
& 58 PPI::ParentElement BEGIN
+ 58
+ d
- d
- 58
+ 58
- 58
- 47
+ 47
+ 12
- 12
- 47
+ 47
- 47
+ 47
+ 55
& 59 Class::Autouse _class_file
+ 59
- 59
+ 54
& 5a File::Spec::Unix catfile
+ 5a
& 5b File::Spec::Unix canonpath
+ 5b
- 5b
& 5c File::Spec::Unix catdir
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
- 54
+ 59
- 59
+ 54
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
- 54
+ 59
- 59
+ 54
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
- 54
- 55
- 47
@ 1 0 1
+ d
- d
- 46
+ 46
- 46
& 5d Class::Autouse _AUTOLOAD
+ 5d
& 5e Class::Autouse load
+ 5e
& 5f Class::Autouse _load
+ 5f
+ 59
- 59
& 60 PPI::Lexer BEGIN
+ 60
+ 3
+ 4
- 4
- 3
- 60
+ 60
+ d
- d
- 60
+ 60
- 60
+ 60
& 61 PPI::Token BEGIN
+ 61
+ 3
+ 4
- 4
- 3
- 61
+ 61
+ d
- d
- 61
+ 61
+ 4a
+ 34
- 34
- 4a
- 61
+ 61
& 62 PPI::Token::Quote BEGIN
+ 62
+ 3
+ 4
- 4
- 3
- 62
+ 62
+ 4a
+ 34
- 34
- 4a
- 62
+ 62
+ 12
- 12
- 62
+ 62
- 62
- 61
+ 61
& 63 PPI::Token::Quote::Simple BEGIN
+ 63
+ 3
+ 4
- 4
- 3
- 63
+ 63
+ 4a
+ 34
- 34
- 4a
- 63
+ 63
+ 12
- 12
- 63
+ 63
- 63
- 61
+ 61
& 64 PPI::Token::Quote::Full BEGIN
+ 64
+ 3
+ 4
- 4
- 3
- 64
+ 64
+ 4a
+ 34
- 34
- 4a
- 64
+ 64
+ 12
- 12
- 64
+ 64
- 64
- 61
+ 61
& 65 PPI::Token::Unknown BEGIN
+ 65
+ 3
+ 4
- 4
- 3
- 65
+ 65
+ 4a
+ 34
- 34
- 4a
- 65
+ 65
+ 12
- 12
- 65
+ 65
- 65
- 61
+ 61
& 66 PPI::Token::Whitespace BEGIN
+ 66
+ 3
+ 4
- 4
- 3
- 66
+ 66
- 66
+ 66
- 66
+ 66
- 66
+ 66
+ 12
- 12
- 66
+ 66
+ 12
- 12
- 66
+ 66
- 66
& 67 PPI::Token::Pod BEGIN
+ 67
- 67
& 68 PPI::Token::Data BEGIN
+ 68
- 68
& 69 PPI::Token::End BEGIN
+ 69
- 69
@ 1 0 1
& 6a PPI::Token::Comment BEGIN
+ 6a
- 6a
& 6b PPI::Token::Bareword BEGIN
+ 6b
+ 12
- 12
- 6b
+ 6b
- 6b
& 6c PPI::Token::Label BEGIN
+ 6c
- 6c
& 6d PPI::Token::Structure BEGIN
+ 6d
- 6d
& 6e PPI::Token::Structure BEGIN
+ 6e
+ 12
- 12
- 6e
+ 6e
- 6e
& 6f PPI::Token::Number BEGIN
+ 6f
- 6f
& 70 PPI::Token::Symbol BEGIN
+ 70
- 70
& 71 PPI::Token::ArrayIndex BEGIN
+ 71
- 71
& 72 PPI::Token::Operator BEGIN
+ 72
- 72
+ 72
+ 12
- 12
- 72
+ 72
- 72
& 73 PPI::Token::Magic BEGIN
+ 73
- 73
+ 73
+ 12
- 12
- 73
+ 73
- 73
& 74 PPI::Token::Cast BEGIN
+ 74
- 74
& 75 PPI::Token::SubPrototype BEGIN
+ 75
- 75
& 76 PPI::Token::Attribute BEGIN
+ 76
- 76
& 77 PPI::Token::DashedBareword BEGIN
+ 77
- 77
& 78 PPI::Token::Quote::Single BEGIN
+ 78
- 78
& 79 PPI::Token::Quote::Double BEGIN
+ 79
- 79
& 7a PPI::Token::Quote::Execute BEGIN
+ 7a
- 7a
& 7b PPI::Token::Quote::OperatorSingle BEGIN
+ 7b
- 7b
& 7c PPI::Token::Quote::OperatorDouble BEGIN
+ 7c
- 7c
& 7d PPI::Token::Quote::OperatorExecute BEGIN
+ 7d
- 7d
& 7e PPI::Token::Quote::Words BEGIN
+ 7e
- 7e
& 7f PPI::Token::Quote::Regex BEGIN
+ 7f
- 7f
& 80 PPI::Token::Regex::Match BEGIN
+ 80
- 80
& 81 PPI::Token::Regex::Pattern BEGIN
+ 81
- 81
& 82 PPI::Token::Regex::Replace BEGIN
+ 82
- 82
& 83 PPI::Token::Regex::Transform BEGIN
+ 83
- 83
& 84 PPI::Token::RawInput::Operator BEGIN
+ 84
- 84
& 85 PPI::Token::RawInput::Terminator BEGIN
+ 85
- 85
& 86 PPI::Token::RawInput::String BEGIN
+ 86
- 86
- 61
+ 61
+ 12
- 12
- 61
+ 61
- 61
- 60
+ 60
- 60
+ 60
+ 4a
+ 34
- 34
- 4a
- 60
+ 60
+ 12
- 12
- 60
+ 60
- 60
& 87 PPI::Lexer BEGIN
+ 87
+ 12
- 12
- 87
+ 87
- 87
@ 1 0 1
& 88 PPI::Lexer BEGIN
+ 88
+ 12
- 12
- 88
+ 88
- 88
- 5f
+ 5f
+ 59
- 59
- 5f
- 5e
& 89 List::Util first
+ 89
- 89
* 60
- 60
& 8a Test::More ok
+ 8a
& 8b Test::Builder ok
+ 8b
& 8c Test::Builder caller
+ 8c
+ 30
- 30
- 8c
& 8d Test::Builder todo
+ 8d
- 8d
+ 2f
- 2f
& 8e Test::Builder use_numbers
+ 8e
- 8e
+ 40
+ 32
- 32
- 40
- 8b
- 8a
& 8f Test::More isa_ok
+ 8f
+ 34
- 34
+ 8b
+ 8c
+ 30
- 30
- 8c
+ 8d
- 8d
+ 2f
- 2f
+ 8e
- 8e
+ 40
+ 32
- 32
- 40
- 8b
- 8f
& 90 PPI::Lexer lex_file
+ 90
& 91 PPI::Lexer lex_source
+ 91
+ 5d
+ 5e
+ 5f
+ 59
- 59
& 92 PPI::Tokenizer BEGIN
+ 92
+ 3
+ 4
- 4
- 3
- 92
+ 92
- 92
+ 92
- 92
+ 92
- 92
+ 92
+ 12
- 12
- 92
+ 92
- 92
- 5f
- 5e
+ 89
- 89
* 92
- 92
& 93 PPI::Lexer lex_tokenizer
+ 93
+ 34
- 34
+ 5d
+ 5e
+ 5f
+ 59
- 59
& 94 PPI::Document BEGIN
+ 94
+ 3
+ 4
- 4
- 3
- 94
+ 94
+ d
- d
- 94
+ 94
- 94
+ 94
& 95 PPI::Statement BEGIN
+ 95
+ 3
+ 4
- 4
- 3
- 95
+ 95
+ d
- d
- 95
+ 95
- 95
+ 95
- 95
& 96 PPI::Statement::Expression BEGIN
+ 96
- 96
& 97 PPI::Statement::Scheduled BEGIN
+ 97
- 97
& 98 PPI::Statement::Package BEGIN
+ 98
- 98
& 99 PPI::Statement::Include BEGIN
+ 99
- 99
& 9a PPI::Statement::Sub BEGIN
+ 9a
- 9a
& 9b PPI::Statement::Variable BEGIN
+ 9b
- 9b
& 9c PPI::Statement::Flow BEGIN
+ 9c
- 9c
& 9d PPI::Statement::Break BEGIN
+ 9d
- 9d
& 9e PPI::Statement::Null BEGIN
+ 9e
- 9e
- 94
+ 94
+ 9e
+ 3
+ 4
- 4
- 3
- 9e
+ 9e
+ d
- d
- 9e
+ 9e
- 9e
+ 9e
- 9e
& 9f PPI::Structure::Block BEGIN
+ 9f
- 9f
& a0 PPI::Structure::Subscript BEGIN
+ a0
- a0
& a1 PPI::Structure::Constructor BEGIN
+ a1
- a1
& a2 PPI::Structure::Condition BEGIN
+ a2
- a2
& a3 PPI::Structure::List BEGIN
+ a3
- a3
- 94
+ 94
+ 12
- 12
- 94
+ 94
- 94
- 5f
+ 5f
+ 59
- 59
+ 54
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
@ 1 0 1
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
+ 5a
+ 5b
- 5b
+ 5c
+ 5b
- 5b
- 5c
- 5a
- 54
+ 53
- 53
- 5f
+ 5f
+ 59
- 59
- 5f
- 5e
+ 89
- 89
* 94
- 94
& a4 PPI::Lexer _lex_document
+ a4
+ 34
- 34
& a5 PPI::Lexer _get_token
+ a5
& a6 PPI::Tokenizer get_token
+ a6
& a7 PPI::Tokenizer _process_next_line
+ a7
& a8 PPI::Tokenizer _fill_line
+ a8
& a9 PPI::Tokenizer _get_line
+ a9
- a9
- a8
& aa PPI::Token::Whitespace _on_line_start
+ aa
& ab PPI::Tokenizer _new_token
+ ab
+ 61
- 61
- ab
& ac PPI::Tokenizer _finalize_token
+ ac
- ac
- aa
- a7
- a6
- a5
+ 6a
- 6a
& ad PPI::Lexer _add_element
+ ad
+ 34
- 34
+ 34
- 34
& ae PPI::ParentElement add_element
+ ae
+ 34
- 34
& af Scalar::Util refaddr
+ af
- af
- ae
- ad
+ a5
+ a6
+ a7
+ a8
+ a9
- a9
- a8
+ aa
+ ab
+ 61
- 61
- ab
- aa
- a7
+ a7
+ a8
+ a9
- a9
- a8
+ aa
+ ab
+ ac
- ac
+ 61
- 61
- ab
+ ac
- ac
- aa
- a7
- a6
- a5
& b0 PPI::Token::Whitespace significant
+ b0
- b0
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
+ a5
+ a6
- a6
- a5
+ 6a
- 6a
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
+ a5
+ a6
+ a7
+ a8
+ a9
- a9
- a8
+ aa
+ ab
+ 61
- 61
- ab
- aa
- a7
+ a7
+ a8
+ a9
- a9
- a8
+ aa
- aa
& b1 PPI::Tokenizer _process_next_char
+ b1
& b2 PPI::Token::Whitespace _on_char
+ b2
& b3 PPI::Token::Bareword _commit
+ b3
& b4 PPI::Tokenizer _previous_significant_tokens
+ b4
+ 6a
- 6a
+ b0
- b0
+ 6a
- 6a
+ 66
+ 61
- 61
- 66
- b4
+ ab
+ ac
- ac
+ 61
- 61
- ab
+ ac
- ac
+ b2
- b2
& b5 PPI::Element DESTROY
+ b5
+ af
- af
- b5
- b3
- b2
+ 61
- 61
- b1
+ b1
+ b2
- b2
+ ab
+ ac
- ac
+ 63
+ 61
- 61
- 63
- ab
- b1
+ b1
+ 62
& b6 PPI::Token::Quote::Simple _fill
+ b6
& b7 PPI::Token::Quote _scan_for_unescaped_character
+ b7
- b7
- b6
+ ac
- ac
- 62
- b1
+ b1
+ b2
& b8 PPI::Token::Structure _commit
+ b8
+ ab
+ 61
- 61
- ab
+ ac
- ac
- b8
- b2
- b1
+ b1
+ b2
- b2
+ 61
- 61
- b1
+ b1
- b1
& b9 PPI::Token::Whitespace _on_line_end
+ b9
+ ac
- ac
- b9
- a7
- a6
- a5
+ b0
- b0
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
+ a5
+ a6
- a6
- a5
& ba PPI::Element significant
+ ba
- ba
& bb PPI::Token content
+ bb
- bb
& bc PPI::Element class
+ bc
- bc
+ 87
+ 34
- 34
+ 34
- 34
+ bb
- bb
- 87
+ 95
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- 95
& bd PPI::Lexer _add_delayed
+ bd
+ 34
- 34
- bd
& be PPI::Lexer _lex_statement
+ be
+ 34
- 34
+ a5
+ a6
- a6
- a5
+ b0
- b0
& bf PPI::Lexer _delay_element
+ bf
+ 34
- 34
- bf
+ a5
+ a6
- a6
- a5
+ ba
- ba
+ 34
- 34
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
+ a5
+ a6
- a6
- a5
+ ba
- ba
+ 34
- 34
+ bb
- bb
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
- be
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
+ a5
+ a6
- a6
- a5
+ b0
- b0
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
+ a5
+ a6
+ a7
+ a8
+ a9
- a9
- a8
+ aa
+ ab
+ 61
- 61
- ab
- aa
- a7
+ a7
+ a8
+ a9
- a9
- a8
+ aa
- aa
+ b1
+ b2
+ b3
+ b4
+ b0
- b0
+ ba
- ba
- b4
+ ab
+ ac
- ac
+ 61
- 61
- ab
+ ac
- ac
+ b2
- b2
- b3
- b2
+ 61
- 61
- b1
+ b1
+ b2
+ ac
- ac
+ b4
+ b0
- b0
+ ba
- ba
+ b0
- b0
+ b0
- b0
+ ba
- ba
+ ba
- ba
- b4
& c0 PPI::Token is_a
+ c0
+ 34
- 34
- c0
+ c0
+ 34
- 34
- c0
+ c0
+ 34
- 34
- c0
- b2
+ ab
+ 61
- 61
- ab
- b1
+ b1
+ 6d
+ ac
- ac
+ b2
- b2
- 6d
+ 61
- 61
- b1
+ b1
+ b2
- b2
+ ab
+ ac
- ac
+ 61
- 61
- ab
- b1
+ b1
+ 6f
+ ac
- ac
+ b2
- b2
- 6f
+ 61
- 61
- b1
+ b1
+ b2
- b2
+ ab
+ ac
- ac
+ 61
- 61
- ab
- b1
+ b1
+ 72
- 72
- b1
+ b1
+ 72
+ ac
- ac
+ b2
- b2
- 72
+ 61
- 61
- b1
+ b1
+ b2
- b2
+ ab
+ ac
- ac
+ 61
- 61
- ab
- b1
+ b1
+ 6f
- 6f
- b1
+ b1
+ 6f
+ ac
- ac
+ b2
- b2
- 6f
+ 61
- 61
- b1
+ b1
+ b2
+ b8
+ ab
+ ac
- ac
+ 61
- 61
- ab
+ ac
- ac
- b8
- b2
- b1
+ b1
+ b2
- b2
+ 61
- 61
- b1
+ b1
+ b2
+ b8
+ ab
+ ac
- ac
+ 61
- 61
- ab
+ ac
- ac
- b8
- b2
- b1
+ b1
+ b2
- b2
+ 61
- 61
- b1
+ b1
- b1
+ b9
+ ac
- ac
- b9
- a7
- a6
- a5
+ b0
- b0
+ ad
+ 34
- 34
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- ad
+ a5
+ a6
- a6
- a5
+ ba
- ba
+ bb
- bb
+ bc
- bc
+ 87
+ 34
- 34
+ 34
- 34
+ bb
- bb
+ bb
- bb
- 87
+ 95
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- 95
+ bd
+ 34
- 34
- bd
+ be
+ 34
- 34
+ a5
+ a6
- a6
- a5
+ b0
- b0
+ bf
+ 34
- 34
- bf
+ a5
+ a6
- a6
- a5
+ ba
- ba
+ 34
- 34
+ bb
- bb
& c1 PPI::Token _opens_structure
+ c1
- c1
+ 88
+ 34
- 34
+ 34
- 34
+ bb
- bb
& c2 PPI::Lexer _resolve_structure_round
+ c2
+ 34
- 34
& c3 PPI::ParentElement nth_significant_child
+ c3
+ ba
- ba
- c3
+ 34
- 34
+ bb
- bb
- c2
- 88
+ 9e
+ 34
- 34
+ c1
- c1
- 9e
+ bd
+ 34
- 34
+ ae
+ 34
- 34
+ af
- af
- ae
- bd
& c4 PPI::Lexer _lex_structure
+ c4
+ 34
- 34
+ a5
+ a6
- a6
- a5
+ b0
- b0
+ bf
+ 34
- 34
- bf
+ a5
+ a6
- a6
- a5
+ ba
- ba
+ bc
- bc
+ 87
+ 34
- 34
- 87
- c4
+ 58
+ af
- af
- 58
- be
- a4
- 93
- 91
- 90
+ 8f
+ 8b
+ 8c
+ 30
- 30
- 8c
+ 8d
- 8d
+ 2f
- 2f
+ 8e
- 8e
+ 40
+ 32
- 32
- 40
& c5 Test::Builder diag
+ c5
+ 8d
+ 3c
- 3c
- 8d
+ 35
- 35
- c5
- 8b
+ c5
+ 8d
+ 3c
- 3c
- 8d
+ 35
- 35
- c5
- 8f
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
+ b5
+ af
- af
- b5
& c6 Test::Builder END
+ c6
& c7 Test::Builder no_ending
+ c7
- c7
& c8 Test::Builder _ending
+ c8
& c9 Test::Builder _sanity_check
+ c9
& ca Test::Builder _whoa
+ ca
- ca
+ ca
- ca
+ ca
- ca
- c9
+ 2f
- 2f
+ c5
+ 8d
+ 3c
- 3c
- 8d
+ 35
- 35
- c5
& cb Test::Builder _my_exit
+ cb
- cb
- c8
- c6
